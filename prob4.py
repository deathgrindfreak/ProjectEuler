#Project Euler: Problem 4
#Goal: Find the largest palindromic number made from the product of two three-digit numbers.
#Author: Cooper Bell

def three_digit_nums():
	"""Generates all possible three digit numbers."""
	list = [100]
	init = 100
	for i in range(0,899):
		init = init + 1
		list.append(init)
	return list
	
def huge_list():
	"""Generates a list of all possible numbers generated by multiplying two three-digit numbers"""
	a1 = three_digit_nums()
	a2 = a1
	list = []
	for i in a1:
		for j in a2:
			element = i*j
			list.append(element)
	return list

def num_to_list(i):
	"""Puts the digits of NUM into a list."""
	list = []
	while True:			
		if i != 0:
			list.append(i%10)
			i = i/10
		else:
			break
	return list
	
def list_supremum(list):
	sup = list[0]
	for i in list:
		if i > sup:
			sup = i
		else:
			continue
	return sup
	
num_list = huge_list()
pal_list = []

for i in num_list:
	num = num_to_list(i)
	rev = num[::-1]
	equal_count = 0
	for j in range(0,len(num)):
		if num[j] == rev[j]:
			equal_count += 1
			#print equal_count
		else:
			break
		if equal_count == len(num):
			pal_list.append(i)
		else:
			continue
	
print list_supremum(pal_list)
